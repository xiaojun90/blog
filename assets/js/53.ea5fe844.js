(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{191:function(t,r,e){"use strict";e.r(r);var a=e(0),o=Object(a.a)({},function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目录","aria-hidden":"true"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1002.html"}},[t._v("07-复杂度来源:低成本、安全、规模")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1001.html"}},[t._v("08-架构设计三原则")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1003.html"}},[t._v("09-架构设计流程：识别复杂度")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1004.html"}},[t._v("10-架构设计流程：设计备选方案")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1005.html"}},[t._v("11-架构设计流程：评估和选择备选方案")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1006.html"}},[t._v("12-架构设计流程：详细方案设计")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1007.html"}},[t._v("13-高性能数据库集群：读写分离")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1008.html"}},[t._v("14-高性能数据库集群：分库分表")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1009.html"}},[t._v("15-高性能NoSQL")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1010.html"}},[t._v("16-高性能缓存")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1011.html"}},[t._v("17-单服务器高性能模式：PPC与TPC")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1012.html"}},[t._v("18-单服务器高性能模式：Reactor与Proactor")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1013.html"}},[t._v("19-高性能负载均衡：分类及架构")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1014.html"}},[t._v("20-高性能负载均衡：算法")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1015.html"}},[t._v("21-CAP理论")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1016.html"}},[t._v("22-CAP理论细节")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1017.html"}},[t._v("23-FMEA方法，排除架构可用性隐患的利器")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1018.html"}},[t._v("24-高可用存储架构：双机架构")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1019.html"}},[t._v("25-高可用存储架构：集群和分区")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1020.html"}},[t._v("26-如何设计计算高可用架构？")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1021.html"}},[t._v("27-业务高可用的保障：异地多活架构")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1022.html"}},[t._v("28-异地多活设计4大技巧")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1023.html"}},[t._v("29-异地多活设计4步走")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1024.html"}},[t._v("30-如何应对接口级的故障？")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1025.html"}},[t._v("31-可扩展架构的基本思想和模式")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1026.html"}},[t._v("32-传统的可扩展架构模式：分层架构和SOA")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1027.html"}},[t._v("33-深入理解微服务架构：银弹 or 焦油坑？")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1028.html"}},[t._v("34-微服务架构最佳实践 - 方法篇")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1029.html"}},[t._v("35-微服务架构最佳实践 - 基础设施篇")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1030.html"}},[t._v("36-微内核架构详解")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1031.html"}},[t._v("37-架构师应该如何判断技术演进的方向？")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1032.html"}},[t._v("38-互联网技术演进的模式")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1033.html"}},[t._v("39-互联网架构模板：“存储层”技术")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1034.html"}},[t._v("40-互联网架构模板：“开发层”和“服务层”技术")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1035.html"}},[t._v("41-互联网架构模板：“网络层”技术")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1036.html"}},[t._v("42-互联网架构模板：“用户层”和“业务层”技术")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1037.html"}},[t._v("43-互联网架构模板：“平台”技术")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1038.html"}},[t._v("44-架构重构内功心法第一式：有的放矢")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1039.html"}},[t._v("45-架构重构内功心法第二式：合纵连横")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1040.html"}},[t._v("46-架构重构内功心法第三式：运筹帷幄")])],1),t._v(" "),e("p",[e("router-link",{attrs:{to:"/architecture/1041.html"}},[t._v("47-开源项目：如何选择、使用以及二次开发")])],1),t._v(" "),e("Valine")],1)},[],!1,null,null,null);r.default=o.exports}}]);